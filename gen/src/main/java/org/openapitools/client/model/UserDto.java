/*
 * OpenAPI definition
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.openapitools.client.model.BranchDto;

/**
 * UserDto
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-12-18T20:07:04.552370+02:00[Europe/Kiev]")
public class UserDto {
  public static final String SERIALIZED_NAME_REPOSITORY_NAME = "repositoryName";
  @SerializedName(SERIALIZED_NAME_REPOSITORY_NAME)
  private String repositoryName;

  public static final String SERIALIZED_NAME_OWNER_LOGIN = "ownerLogin";
  @SerializedName(SERIALIZED_NAME_OWNER_LOGIN)
  private String ownerLogin;

  public static final String SERIALIZED_NAME_BRANCHES = "branches";
  @SerializedName(SERIALIZED_NAME_BRANCHES)
  private List<BranchDto> branches = null;


  public UserDto repositoryName(String repositoryName) {
    
    this.repositoryName = repositoryName;
    return this;
  }

   /**
   * Get repositoryName
   * @return repositoryName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getRepositoryName() {
    return repositoryName;
  }


  public void setRepositoryName(String repositoryName) {
    this.repositoryName = repositoryName;
  }


  public UserDto ownerLogin(String ownerLogin) {
    
    this.ownerLogin = ownerLogin;
    return this;
  }

   /**
   * Get ownerLogin
   * @return ownerLogin
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getOwnerLogin() {
    return ownerLogin;
  }


  public void setOwnerLogin(String ownerLogin) {
    this.ownerLogin = ownerLogin;
  }


  public UserDto branches(List<BranchDto> branches) {
    
    this.branches = branches;
    return this;
  }

  public UserDto addBranchesItem(BranchDto branchesItem) {
    if (this.branches == null) {
      this.branches = new ArrayList<BranchDto>();
    }
    this.branches.add(branchesItem);
    return this;
  }

   /**
   * Get branches
   * @return branches
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<BranchDto> getBranches() {
    return branches;
  }


  public void setBranches(List<BranchDto> branches) {
    this.branches = branches;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    UserDto userDto = (UserDto) o;
    return Objects.equals(this.repositoryName, userDto.repositoryName) &&
        Objects.equals(this.ownerLogin, userDto.ownerLogin) &&
        Objects.equals(this.branches, userDto.branches);
  }

  @Override
  public int hashCode() {
    return Objects.hash(repositoryName, ownerLogin, branches);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class UserDto {\n");
    sb.append("    repositoryName: ").append(toIndentedString(repositoryName)).append("\n");
    sb.append("    ownerLogin: ").append(toIndentedString(ownerLogin)).append("\n");
    sb.append("    branches: ").append(toIndentedString(branches)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

